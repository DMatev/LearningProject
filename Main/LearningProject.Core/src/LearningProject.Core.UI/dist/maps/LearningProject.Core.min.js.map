{"version":3,"sources":["LearningProject.Core.Module.js","LearningProject.Core.Routes.js","components/home/LearningProject.Core.Home.Controller.js","components/home/LearningProject.Core.Home.Service.js","components/init/LearningProject.Core.Init.Service.js","components/storage/LearningProject.Core.Storage.Service.js","components/translate/LearningProject.Core.Translate.Service.js"],"names":["init","$q","initService","defer","run","then","result","console","log","resolve","err","reject","promise","angular","module","$inject","RouteConfig","$routeProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","caseInsensitiveMatch","config","HomeController","homeService","storageService","translationService","setStorage","key","value","set","getStorage","get","vm","test","removeStorage","remove","clearStorage","clear","this","missingLangauge","message","$http","success","res","error","factory","translateService","rememberMe","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","language","_translations","translation","findTranslation","Content","i","length","MessageCode"],"mappings":"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","file":"LearningProject.Core.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Module', [\r\n            'angular-loading-bar',\r\n            'LearningProject.Core.Init.Service',\r\n            'LearningProject.Core.Routes'])\r\n        .run(init);\r\n\r\n    init.$inject = ['$q', 'LearningProject.Core.Init.Service'];\r\n\r\n    function init($q, initService) {\r\n        var defer = $q.defer();\r\n\r\n        initService.run()\r\n            .then(function (result) {\r\n                console.log(result);\r\n                defer.resolve();\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n                defer.reject();\r\n            });\r\n\r\n        return defer.promise;\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Routes', ['ngRoute', 'LearningProject.Core.Home.Controller'])\r\n        .config(['$routeProvider', RouteConfig]);\r\n\r\n    function RouteConfig($routeProvider) {\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: '/app/components/home/LearningProject.Core.Home.View.html',\r\n                controller: 'LearningProject.Core.Home.Controller',\r\n                controllerAs: 'home'\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/',\r\n                caseInsensitiveMatch: true\r\n            });\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Home.Controller', ['LearningProject.Core.Home.Service', 'LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'])\r\n        .controller('LearningProject.Core.Home.Controller', HomeController);\r\n\r\n    HomeController.$inject = ['LearningProject.Core.Home.Service', 'LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'];\r\n\r\n    function HomeController(homeService, storageService, translationService) {\r\n        var vm = this;\r\n        console.log('getting the message');\r\n        translationService\r\n            .get('MissingLangauge')\r\n            .then(function (missingLangauge) {\r\n                vm.test = missingLangauge;\r\n            })\r\n            .catch(function (message){\r\n                console.log('error getting the message:');\r\n                console.log(message);\r\n            });\r\n        vm.setStorage = setStorage;\r\n        vm.getStorage = getStorage;\r\n        vm.removeStorage = removeStorage;\r\n        vm.clearStorage = clearStorage;\r\n\r\n\r\n        function setStorage(key, value) {\r\n            storageService\r\n                .set(key, value);\r\n        }\r\n\r\n        function getStorage(key) {\r\n            storageService\r\n                .get(key)\r\n                .then(function (value) {\r\n                    vm.test = value;\r\n                })\r\n                .catch(function () {\r\n                    console.log('fail');\r\n                });\r\n        }\r\n\r\n        function removeStorage(key) {\r\n            storageService\r\n                .remove(key);\r\n        }\r\n\r\n        function clearStorage() {\r\n            storageService\r\n                .clear();\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Home.Service', [])\r\n        .factory('LearningProject.Core.Home.Service', homeService);\r\n\r\n    homeService.$inject = ['$http', '$q'];\r\n\r\n    function homeService($http, $q) {\r\n        var homeService = {\r\n            test: test\r\n        };\r\n\r\n        return homeService;\r\n\r\n        function test() {\r\n            var defer = $q.defer();\r\n\r\n            $http.get('/api/test')\r\n                .success(function (res) {\r\n                    defer.resolve(res);\r\n                })\r\n                .error(function (err) {\r\n                    defer.reject(err);\r\n                });\r\n\r\n            return defer.promise;\r\n        }\r\n    }\r\n\r\n})();","(function (){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('LearningProject.Core.Init.Service', ['LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'])\r\n        .factory('LearningProject.Core.Init.Service', initService);\r\n\r\n    initService.$inject = ['$q', 'LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'];\r\n\r\n    function initService($q, storageService, translateService){\r\n        var initService = {\r\n            run: run\r\n        };\r\n\r\n        return initService;\r\n\r\n        function run(){\r\n            //check for AutoLogin\r\n            var defer = $q.defer();\r\n            storageService.get('rememberMe')\r\n                .then(function (rememberMe){\r\n                    if(rememberMe){\r\n                        //tryToAuthenticate  && getUserInfo\r\n                        console.log('bla bla');\r\n                    } else {\r\n                         translateService\r\n                            .init(1)\r\n                            .then(function (){\r\n                                console.log('language translation initiliazed');\r\n                                defer.resolve();\r\n                            })\r\n                            .catch(function (){\r\n                                console.log('error translation init');\r\n                                defer.reject();\r\n                            });\r\n                    }\r\n                })\r\n                .catch(function (){\r\n                           translateService\r\n                            .init(1)\r\n                            .then(function (){\r\n                                console.log('language translation initiliazed');\r\n                                defer.resolve();\r\n                            })\r\n                            .catch(function (){\r\n                                console.log('error translation init');\r\n                                defer.reject();\r\n                            });\r\n                    //get EnglishMessages\r\n                    //setDefaultLanguageTranslation();\r\n                });\r\n\r\n            return defer.promise;\r\n\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Storage.Service', [])\r\n        .factory('LearningProject.Core.Storage.Service', storageService);\r\n\r\n    storageService.$inject = ['$q'];\r\n\r\n    function storageService($q) {\r\n        var storageService = {\r\n            set: set,\r\n            get: get,\r\n            remove: remove,\r\n            clear: clear\r\n        };\r\n\r\n        return storageService;\r\n\r\n        function set(key, value) {\r\n            var defer = $q.defer();\r\n\r\n            localStorage.setItem(key, JSON.stringify(value));\r\n            defer.resolve();\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function get(key) {\r\n            var value,\r\n                defer = $q.defer();\r\n\r\n            value = localStorage.getItem(key);\r\n\r\n            // if (value === null || value === undefined) {\r\n            //     // defer.reject('record with this key not found');\r\n            // } else {\r\n                value = JSON.parse(value);\r\n                defer.resolve(value);\r\n            // }\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function remove(key) {\r\n            var defer = $q.defer();\r\n\r\n            localStorage.removeItem(key);\r\n            defer.resolve();\r\n\r\n            return defer.promise;\r\n\r\n        }\r\n\r\n        function clear() {\r\n            var defer = $q.defer();\r\n\r\n            localStorage.clear();\r\n            defer.resolve();\r\n\r\n            return defer.promise;\r\n        }\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Translate.Service', [])\r\n        .factory('LearningProject.Core.Translate.Service', translateService);\r\n\r\n    translateService.$inject = ['$http', '$q'];\r\n\r\n    function translateService($http, $q) {\r\n        var _translations = {},\r\n            translateService = {\r\n                init: init,\r\n                get: get\r\n            };\r\n\r\n        return translateService;\r\n\r\n        function init(language) {\r\n            var defer = $q.defer();\r\n\r\n            if (typeof language !== 'number') {\r\n                defer.reject('the type of the language should be number');\r\n            }\r\n\r\n            $http.get('/api/translation/' + language)\r\n                .success(function (res) {\r\n                    _translations = res;\r\n                    defer.resolve();\r\n                })\r\n                .error(function (err) {\r\n                    defer.reject(err);\r\n                });\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function get(key) {\r\n            var defer = $q.defer(),\r\n                translation;\r\n\r\n            translation = findTranslation(key);\r\n            if (typeof translation !== 'object' || typeof translation.Content !== 'string') {\r\n                defer.reject('translation not found');\r\n            } else {\r\n                defer.resolve(translation.Content);\r\n            }\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function findTranslation(key) {\r\n            for (var i = 0; i < _translations.length; i++) {\r\n                if (_translations[i].MessageCode === key) {\r\n                    return _translations[i];\r\n                }\r\n            }\r\n\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n})();"],"sourceRoot":"/source/"}