{"version":3,"sources":["LearningProject.Core.Module.js","LearningProject.Core.Routes.js","components/home/LearningProject.Core.Home.Controller.js","components/home/LearningProject.Core.Home.Service.js","components/init/LearningProject.Core.Init.Service.js","components/storage/LearningProject.Core.Storage.Service.js","components/translate/LearningProject.Core.Translate.Service.js"],"names":["angular","module","RouteConfig","$routeProvider","resolveInit","$q","initService","console","log","res","rej","run","when","templateUrl","controller","controllerAs","resolve","init","otherwise","redirectTo","caseInsensitiveMatch","$inject","config","HomeController","homeService","storageService","translationService","setStorage","key","value","set","getStorage","get","then","vm","test","removeStorage","remove","clearStorage","clear","this","missingLangauge","message","$http","defer","success","error","err","reject","promise","factory","translateService","rememberMe","localStorage","setItem","JSON","stringify","getItem","parse","removeItem","language","_translations","translation","findTranslation","Content","i","length","MessageCode"],"mappings":"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","file":"LearningProject.Core.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Module', [\r\n            'angular-loading-bar',\r\n            'LearningProject.Core.Init.Service',\r\n            'LearningProject.Core.Routes']);\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Routes', ['ngRoute', 'LearningProject.Core.Home.Controller'])\r\n        .config(['$routeProvider', RouteConfig]);\r\n\r\n    function RouteConfig($routeProvider) { // use ui-router instead\r\n        $routeProvider\r\n            .when('/', {\r\n                templateUrl: '/app/components/home/LearningProject.Core.Home.View.html',\r\n                controller: 'LearningProject.Core.Home.Controller',\r\n                controllerAs: 'home',\r\n                resolve: {\r\n                    init: resolveInit\r\n                }\r\n\r\n            })\r\n            .otherwise({\r\n                redirectTo: '/',\r\n                caseInsensitiveMatch: true\r\n            });\r\n\r\n            resolveInit.$inject = ['$q','LearningProject.Core.Init.Service'];\r\n\r\n        function resolveInit($q, initService){\r\n            console.log('resolove init invoked');\r\n            return $q(function(res, rej) {\r\n                initService.run().finally(function() { res() });\r\n            });\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Home.Controller', ['LearningProject.Core.Home.Service', 'LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'])\r\n        .controller('LearningProject.Core.Home.Controller', HomeController);\r\n\r\n    HomeController.$inject = ['LearningProject.Core.Home.Service', 'LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'];\r\n\r\n    function HomeController(homeService, storageService, translationService) {\r\n        var vm = this;\r\n        console.log('getting the message');\r\n        translationService //change not to be promise or use ecma6\r\n            .get('MissingLangauge')\r\n            .then(function (missingLangauge) {\r\n                vm.test = missingLangauge;\r\n            })\r\n            .catch(function (message){\r\n                console.log('error getting the message:');\r\n                console.log(message);\r\n            });\r\n        vm.setStorage = setStorage;\r\n        vm.getStorage = getStorage;\r\n        vm.removeStorage = removeStorage;\r\n        vm.clearStorage = clearStorage;\r\n\r\n\r\n        function setStorage(key, value) {\r\n            storageService\r\n                .set(key, value);\r\n        }\r\n\r\n        function getStorage(key) {\r\n            storageService\r\n                .get(key)\r\n                .then(function (value) {\r\n                    vm.test = value;\r\n                })\r\n                .catch(function () {\r\n                    console.log('fail');\r\n                });\r\n        }\r\n\r\n        function removeStorage(key) {\r\n            storageService\r\n                .remove(key);\r\n        }\r\n\r\n        function clearStorage() {\r\n            storageService\r\n                .clear();\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Home.Service', [])\r\n        .factory('LearningProject.Core.Home.Service', homeService); //rename factoryName and use inject gulp\r\n\r\n    homeService.$inject = ['$http', '$q'];\r\n\r\n    function homeService($http, $q) {\r\n        var homeService = {\r\n            test: test\r\n        };\r\n\r\n        return homeService;\r\n\r\n        function test() {\r\n            var defer = $q.defer();\r\n\r\n            $http.get('/api/test')\r\n                .success(function (res) { //use then success and error are depricated\r\n                    defer.resolve(res);\r\n                })\r\n                .error(function (err) {\r\n                    defer.reject(err);\r\n                });\r\n\r\n            return defer.promise;\r\n        }\r\n    }\r\n\r\n})();","(function (){\r\n    'use strict';\r\n    \r\n    angular\r\n        .module('LearningProject.Core.Init.Service', ['LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'])\r\n        .factory('LearningProject.Core.Init.Service', initService);\r\n\r\n    initService.$inject = ['$q', 'LearningProject.Core.Storage.Service', 'LearningProject.Core.Translate.Service'];\r\n\r\n    function initService($q, storageService, translateService){\r\n        var initService = {\r\n            run: run\r\n        };\r\n\r\n        return initService;\r\n\r\n        function run(){\r\n            var defer = $q.defer();\r\n            storageService.get('rememberMe')\r\n                .then(function (rememberMe){\r\n                    if(rememberMe){\r\n                        console.log('bla bla');\r\n                    } else {\r\n                         translateService\r\n                            .init(1)\r\n                            .then(function (){\r\n                                console.log('language translation initiliazed');\r\n                                defer.resolve();\r\n                            })\r\n                            .catch(function (){\r\n                                console.log('error translation init');\r\n                                defer.reject();\r\n                            });\r\n                    }\r\n                })\r\n                .catch(function (){\r\n                           translateService\r\n                            .init(1)\r\n                            .then(function (){\r\n                                console.log('language translation initiliazed');\r\n                                defer.resolve();\r\n                            })\r\n                            .catch(function (){\r\n                                console.log('error translation init');\r\n                                defer.reject();\r\n                            });\r\n                });\r\n\r\n            return defer.promise;\r\n\r\n        }\r\n    }\r\n\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Storage.Service', [])\r\n        .factory('LearningProject.Core.Storage.Service', storageService);\r\n\r\n    storageService.$inject = ['$q'];\r\n\r\n    function storageService($q) {\r\n        var storageService = {\r\n            set: set,\r\n            get: get,\r\n            remove: remove,\r\n            clear: clear\r\n        };\r\n\r\n        return storageService;\r\n\r\n        function set(key, value) {\r\n            var defer = $q.defer();\r\n\r\n            localStorage.setItem(key, JSON.stringify(value));\r\n            defer.resolve();\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function get(key) {\r\n            var value,\r\n                defer = $q.defer();\r\n\r\n            value = localStorage.getItem(key);\r\n\r\n            // if (value === null || value === undefined) {\r\n            //     // defer.reject('record with this key not found');\r\n            // } else {\r\n                value = JSON.parse(value);\r\n                defer.resolve(value);\r\n            // }\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function remove(key) {\r\n            var defer = $q.defer();\r\n\r\n            localStorage.removeItem(key);\r\n            defer.resolve();\r\n\r\n            return defer.promise;\r\n\r\n        }\r\n\r\n        function clear() {\r\n            var defer = $q.defer();\r\n\r\n            localStorage.clear();\r\n            defer.resolve();\r\n\r\n            return defer.promise;\r\n        }\r\n    }\r\n})();","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('LearningProject.Core.Translate.Service', [])\r\n        .factory('LearningProject.Core.Translate.Service', translateService);\r\n\r\n    translateService.$inject = ['$http', '$q'];\r\n\r\n    function translateService($http, $q) {\r\n        var _translations = {},\r\n            translateService = {\r\n                init: init,\r\n                get: get\r\n            };\r\n\r\n        return translateService;\r\n\r\n        function init(language) {\r\n            var defer = $q.defer();\r\n\r\n            if (typeof language !== 'number') {\r\n                defer.reject('the type of the language should be number');\r\n            }\r\n\r\n            $http.get('/api/translation/' + language)\r\n                .success(function (res) {\r\n                    _translations = res;\r\n                    defer.resolve();\r\n                })\r\n                .error(function (err) {\r\n                    defer.reject(err);\r\n                });\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function get(key) {\r\n            var defer = $q.defer(),\r\n                translation;\r\n\r\n            translation = findTranslation(key);\r\n            if (typeof translation !== 'object' || typeof translation.Content !== 'string') {\r\n                defer.reject('translation not found');\r\n            } else {\r\n                defer.resolve(translation.Content);\r\n            }\r\n\r\n            return defer.promise;\r\n        }\r\n\r\n        function findTranslation(key) {\r\n            for (var i = 0; i < _translations.length; i++) {\r\n                if (_translations[i].MessageCode === key) {\r\n                    return _translations[i];\r\n                }\r\n            }\r\n\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n})();"],"sourceRoot":"/source/"}